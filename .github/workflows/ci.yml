name: CMake

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build-cmake:
    strategy:
      matrix:
        operating-system: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.operating-system }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Configure CMake
        run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}}

      - name: Build with CMake
        run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

      - name: Test with CMake
        working-directory: ${{github.workspace}}/build
        run: ctest -C ${{env.BUILD_TYPE}}

  build-arduino-cli:
    strategy:
      matrix:
        operating-system: [ubuntu-latest]
    runs-on: ${{ matrix.operating-system }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Install Arduino CLI
        run: curl -fsSL https://raw.githubusercontent.com/arduino/arduino-cli/master/install.sh | sh

      - name: Set up Arduino CLI
        run: |
          ${{github.workspace}}/bin/arduino-cli config init
          ${{github.workspace}}/bin/arduino-cli config add board_manager.additional_urls https://raw.githubusercontent.com/espressif/arduino-esp32/gh-pages/package_esp32_index.json
          ${{github.workspace}}/bin/arduino-cli core update-index
          ${{github.workspace}}/bin/arduino-cli core install esp32:esp32
          ${{github.workspace}}/bin/arduino-cli config set directories.user ${{github.workspace}}
          echo ls .
          echo ls examples

      # - name: Setup upterm session
      #   uses: lhotari/action-upterm@v1
          
      - name: Build with Arduino CLI
        run: ${{github.workspace}}/bin/arduino-cli compile --fqbn esp32:esp32:nodemcu-32s ./examples/Aes
